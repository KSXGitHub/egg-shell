// // Body of a program.
// ProgramBody = { Block* }

// // Code block that is started with a first line.
// Block = {
//     | BlockFirstLine ~ NEWLINE ~ Block+
//     | BlockFirstLine
// }

// // First line to define the block, always has 1 indent level less than the rest of the block.
// BlockFirstLine = _{ PUSH(Indentation)* ~ ItemHead }

// // Line of the boby of the block, always has 1 indent level more than the first line of the block.
// BlockBodyLine = _{ PEEK_ALL ~ ItemHead }

// // Head of an item.
// ItemHead = _{ "(todo)" }

// Identifier to name types, variables, functions, etc.
Identifier = @{ NormalIdentifier | StringIdentifier }

// Identifier without special characters.
NormalIdentifier = @{ !Keyword ~ ASCII_ALPHA ~ ("_" | "-" | ASCII_ALPHANUMERIC)* ~ !NormalStringLiteral }

// Identifier that can contain any character.
StringIdentifier = @{ "id" ~ NormalStringLiteral }

// Keyword to exclude from NormalIdentifier.
Keyword = @{
    | VisibilityKeyword
    | DeclarationKeyword
    | EscapeKeyword
    | LiteralKeyword
    | ImperativeKeyword
    | TypeKeyword
}

// Keyword to define items' visibility.
VisibilityKeyword = @{
    | "pub"
}

// Keyword to escape a block, a scope, a function, or a program.
EscapeKeyword = @{
    | "break"
    | "continue"
    | "exec"
    | "exit"
    | "return"
}

// Keyword to declare a binding.
DeclarationKeyword = @{
    | "const"
    | "enum"
    | "fn"
    | "impl"
    | "let"
    | "struct"
    | "trait"
    | "type"
    | "union"
}

// Keyword to define imperative structure.
ImperativeKeyword = @{
    | "do"
    | "else"
    | "for"
    | "if"
    | "loop"
    | "while"
}

// Name of a primitive type.
TypeKeyword = @{
    | "any"
    | "never"
    | "void"
    | NumTypeKeyword
}

// Name of a numeric type.
NumTypeKeyword = @{ IntTypeKeyword | FloatTypeKeyword }

// Name of an integer type.
IntTypeKeyword = @{ ("u" | "i") ~ ("8" | "16" | "32" | "64" | "128") }

// Name of a floating-point number type.
FloatTypeKeyword = @{ "f32" | "f64" }

// Literal keyword to exclude from NormalIdentifier.
LiteralKeyword = @{
    | "true"
    | "false"
    | "null"
    | "inf"
    | "nan"
}

// String literal.
StringLiteral = @{ NormalStringLiteral | RawStringLiteral }

// String literal with escape sequences.
NormalStringLiteral = ${
    | ("\"" ~ (!"\"" ~ NormalCharacter)* ~ "\"")
    | ("'" ~ (!"'" ~ NormalCharacter)* ~ "'")
}

// Characters to used in `NormalStringLiteral`.
NormalCharacter = @{
    | !"\\" ~ ANY
    | "\\" ~ ("\"" | "'" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ "x" ~ ASCII_HEX_DIGIT{2}
    | "\\" ~ "u" ~ ASCII_HEX_DIGIT{4}
    | "\\" ~ "u" ~ "{" ~ ASCII_HEX_DIGIT+ ~ "}"
}

// String literal without escape sequences.
RawStringLiteral = @{ "r" ~ RawStringLiteralBody }

// Body of a raw string.
RawStringLiteralBody = @{
    | ("\"" ~ (!"\"" ~ ANY)* ~ "\"")
    | ("'" ~ (!"'" ~ ANY)* ~ "'")
}

// Ident at the start of a line to define a block.
Indentation = _{ (" " | "\t") }

// Implicit whitespace
WHITESPACE = _{ (" " | "\t")+ }
