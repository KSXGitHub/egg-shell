trait MyTypeDictClass(type_dict, infer type1, infer type2)

struct MyTypeDict

impl MyTypeDictClass(MyTypeDict, u8, u16)

pub type MyType1 = infer x where MyTypeDictClass(MyTypeDict, x, _)                          # MyType1 is u8
pub type MyType2 = infer x where MyTypeDictClass(MyTypeDict, _, y)                          # MyType2 is u16
pub type MyTypeTuple = infer (x, y) where MyTypeDictClass(MyTypeDict, x, y)                 # MyTypeTuple is (u8, u16)
pub type id'infer with pipe syntax' = MyTypeDict | infer x where MyTypeDictClass(?, x, _)   # returns u8
