pub trait Combine(Left, Right, infer Output) with
    pub fn combine(left: Left, right: Right) -> Output

inst Combine(u8, u8, u16) with
    pub fn combine(left: u8, right: u8) -> u16
        return left as u16 | bit_shl(?, size of u8) | bit_or(?, right as _)

pub fn 'invoking the trait function'() do
    print 'Enter two integers separated by a whitespace: '
    let left: u8 = read()
    let right: u8 = read()
    let output = Combine::combine(left, right)
    println f'Output: $output'

type id'associated type of Combine(u8, u8)' = infer Output where Combine(u8, u8, Output)
