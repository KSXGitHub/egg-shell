#! /usr/bin/env egg
@@!desc Library to calculate fibonacci number.
@!cli::mode 'standard'
@!cli::help::desc 'Calculate fibonacci number'

@@desc Calculate the nth element of the fibonacci sequence.
@@extra
    The Fibonacci sequence is a sequence in which each number
    is the sum of the two preceding ones.

    fibonacci(0) = 0
    fibonacci(1) = 1
    fibonacci(n) = fibonacci(n - 1) + fibonacci(n - 2)
@@params
    n: The position of the queried number.
    ->: The nth number in the fibonacci sequence.
pub const fn fibonacci(n: u16) -> u32
    return match n
        case 0 or 1 then n
        case _ then fibonacci(n - 2) + fibonacci(n - 1)

@test::run
fn 'First 10 fibonacci numbers'() do
    let received = range(0, 10).map(fibonacci).collect()
    let expected = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
    assert_eq(received, expected)

# This function would be executed when fibonacci.egg is called as an executable without any argument.
@cli::entry
fn handle-stdin() do
    print 'Enter the position of the fibonacci number: '
    let n: u16 = read()
    println f'Calculating fibonacci($n)...'
    let fib = fibonacci(n)
    println f'Result: fibonacci($n) = $fib'

# This function would be executed when fibonacci.egg is called as an executable with a single argument.
@cli::entry
@cli::help::params '''
    n: The position of the queried number.
fn handle-argument(n: u16) do
    n | fibonacci(?) | println(?)
